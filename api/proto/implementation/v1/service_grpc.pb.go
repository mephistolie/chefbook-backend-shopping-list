// Code generated by protoc-gen-go-grpc. DO NOT EDIT.
// versions:
// - protoc-gen-go-grpc v1.3.0
// - protoc             v3.21.12
// source: v1/service.proto

package v1

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
// Requires gRPC-Go v1.32.0 or later.
const _ = grpc.SupportPackageIsVersion7

const (
	ShoppingListService_GetShoppingLists_FullMethodName           = "/v1.ShoppingListService/GetShoppingLists"
	ShoppingListService_CreateSharedShoppingList_FullMethodName   = "/v1.ShoppingListService/CreateSharedShoppingList"
	ShoppingListService_GetShoppingList_FullMethodName            = "/v1.ShoppingListService/GetShoppingList"
	ShoppingListService_SetShoppingListName_FullMethodName        = "/v1.ShoppingListService/SetShoppingListName"
	ShoppingListService_SetShoppingList_FullMethodName            = "/v1.ShoppingListService/SetShoppingList"
	ShoppingListService_AddPurchasesToShoppingList_FullMethodName = "/v1.ShoppingListService/AddPurchasesToShoppingList"
	ShoppingListService_DeleteSharedShoppingList_FullMethodName   = "/v1.ShoppingListService/DeleteSharedShoppingList"
	ShoppingListService_GetShoppingListUsers_FullMethodName       = "/v1.ShoppingListService/GetShoppingListUsers"
	ShoppingListService_GetSharedShoppingListLink_FullMethodName  = "/v1.ShoppingListService/GetSharedShoppingListLink"
	ShoppingListService_JoinShoppingList_FullMethodName           = "/v1.ShoppingListService/JoinShoppingList"
	ShoppingListService_DeleteUserFromShoppingList_FullMethodName = "/v1.ShoppingListService/DeleteUserFromShoppingList"
)

// ShoppingListServiceClient is the client API for ShoppingListService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://pkg.go.dev/google.golang.org/grpc/?tab=doc#ClientConn.NewStream.
type ShoppingListServiceClient interface {
	GetShoppingLists(ctx context.Context, in *GetShoppingListsRequest, opts ...grpc.CallOption) (*GetShoppingListsResponse, error)
	CreateSharedShoppingList(ctx context.Context, in *CreateSharedShoppingListRequest, opts ...grpc.CallOption) (*CreateSharedShoppingListResponse, error)
	GetShoppingList(ctx context.Context, in *GetShoppingListRequest, opts ...grpc.CallOption) (*GetShoppingListResponse, error)
	SetShoppingListName(ctx context.Context, in *SetShoppingListNameRequest, opts ...grpc.CallOption) (*SetShoppingListNameResponse, error)
	SetShoppingList(ctx context.Context, in *SetShoppingListRequest, opts ...grpc.CallOption) (*SetShoppingListResponse, error)
	AddPurchasesToShoppingList(ctx context.Context, in *SetShoppingListRequest, opts ...grpc.CallOption) (*SetShoppingListResponse, error)
	DeleteSharedShoppingList(ctx context.Context, in *DeleteSharedShoppingListRequest, opts ...grpc.CallOption) (*DeleteSharedShoppingListResponse, error)
	GetShoppingListUsers(ctx context.Context, in *GetShoppingListUsersRequest, opts ...grpc.CallOption) (*GetShoppingListUsersResponse, error)
	GetSharedShoppingListLink(ctx context.Context, in *GetSharedShoppingListLinkRequest, opts ...grpc.CallOption) (*GetSharedShoppingListLinkResponse, error)
	JoinShoppingList(ctx context.Context, in *JoinShoppingListRequest, opts ...grpc.CallOption) (*JoinShoppingListResponse, error)
	DeleteUserFromShoppingList(ctx context.Context, in *DeleteUserFromShoppingListRequest, opts ...grpc.CallOption) (*DeleteUserFromShoppingListResponse, error)
}

type shoppingListServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewShoppingListServiceClient(cc grpc.ClientConnInterface) ShoppingListServiceClient {
	return &shoppingListServiceClient{cc}
}

func (c *shoppingListServiceClient) GetShoppingLists(ctx context.Context, in *GetShoppingListsRequest, opts ...grpc.CallOption) (*GetShoppingListsResponse, error) {
	out := new(GetShoppingListsResponse)
	err := c.cc.Invoke(ctx, ShoppingListService_GetShoppingLists_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *shoppingListServiceClient) CreateSharedShoppingList(ctx context.Context, in *CreateSharedShoppingListRequest, opts ...grpc.CallOption) (*CreateSharedShoppingListResponse, error) {
	out := new(CreateSharedShoppingListResponse)
	err := c.cc.Invoke(ctx, ShoppingListService_CreateSharedShoppingList_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *shoppingListServiceClient) GetShoppingList(ctx context.Context, in *GetShoppingListRequest, opts ...grpc.CallOption) (*GetShoppingListResponse, error) {
	out := new(GetShoppingListResponse)
	err := c.cc.Invoke(ctx, ShoppingListService_GetShoppingList_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *shoppingListServiceClient) SetShoppingListName(ctx context.Context, in *SetShoppingListNameRequest, opts ...grpc.CallOption) (*SetShoppingListNameResponse, error) {
	out := new(SetShoppingListNameResponse)
	err := c.cc.Invoke(ctx, ShoppingListService_SetShoppingListName_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *shoppingListServiceClient) SetShoppingList(ctx context.Context, in *SetShoppingListRequest, opts ...grpc.CallOption) (*SetShoppingListResponse, error) {
	out := new(SetShoppingListResponse)
	err := c.cc.Invoke(ctx, ShoppingListService_SetShoppingList_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *shoppingListServiceClient) AddPurchasesToShoppingList(ctx context.Context, in *SetShoppingListRequest, opts ...grpc.CallOption) (*SetShoppingListResponse, error) {
	out := new(SetShoppingListResponse)
	err := c.cc.Invoke(ctx, ShoppingListService_AddPurchasesToShoppingList_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *shoppingListServiceClient) DeleteSharedShoppingList(ctx context.Context, in *DeleteSharedShoppingListRequest, opts ...grpc.CallOption) (*DeleteSharedShoppingListResponse, error) {
	out := new(DeleteSharedShoppingListResponse)
	err := c.cc.Invoke(ctx, ShoppingListService_DeleteSharedShoppingList_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *shoppingListServiceClient) GetShoppingListUsers(ctx context.Context, in *GetShoppingListUsersRequest, opts ...grpc.CallOption) (*GetShoppingListUsersResponse, error) {
	out := new(GetShoppingListUsersResponse)
	err := c.cc.Invoke(ctx, ShoppingListService_GetShoppingListUsers_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *shoppingListServiceClient) GetSharedShoppingListLink(ctx context.Context, in *GetSharedShoppingListLinkRequest, opts ...grpc.CallOption) (*GetSharedShoppingListLinkResponse, error) {
	out := new(GetSharedShoppingListLinkResponse)
	err := c.cc.Invoke(ctx, ShoppingListService_GetSharedShoppingListLink_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *shoppingListServiceClient) JoinShoppingList(ctx context.Context, in *JoinShoppingListRequest, opts ...grpc.CallOption) (*JoinShoppingListResponse, error) {
	out := new(JoinShoppingListResponse)
	err := c.cc.Invoke(ctx, ShoppingListService_JoinShoppingList_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *shoppingListServiceClient) DeleteUserFromShoppingList(ctx context.Context, in *DeleteUserFromShoppingListRequest, opts ...grpc.CallOption) (*DeleteUserFromShoppingListResponse, error) {
	out := new(DeleteUserFromShoppingListResponse)
	err := c.cc.Invoke(ctx, ShoppingListService_DeleteUserFromShoppingList_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// ShoppingListServiceServer is the server API for ShoppingListService service.
// All implementations must embed UnimplementedShoppingListServiceServer
// for forward compatibility
type ShoppingListServiceServer interface {
	GetShoppingLists(context.Context, *GetShoppingListsRequest) (*GetShoppingListsResponse, error)
	CreateSharedShoppingList(context.Context, *CreateSharedShoppingListRequest) (*CreateSharedShoppingListResponse, error)
	GetShoppingList(context.Context, *GetShoppingListRequest) (*GetShoppingListResponse, error)
	SetShoppingListName(context.Context, *SetShoppingListNameRequest) (*SetShoppingListNameResponse, error)
	SetShoppingList(context.Context, *SetShoppingListRequest) (*SetShoppingListResponse, error)
	AddPurchasesToShoppingList(context.Context, *SetShoppingListRequest) (*SetShoppingListResponse, error)
	DeleteSharedShoppingList(context.Context, *DeleteSharedShoppingListRequest) (*DeleteSharedShoppingListResponse, error)
	GetShoppingListUsers(context.Context, *GetShoppingListUsersRequest) (*GetShoppingListUsersResponse, error)
	GetSharedShoppingListLink(context.Context, *GetSharedShoppingListLinkRequest) (*GetSharedShoppingListLinkResponse, error)
	JoinShoppingList(context.Context, *JoinShoppingListRequest) (*JoinShoppingListResponse, error)
	DeleteUserFromShoppingList(context.Context, *DeleteUserFromShoppingListRequest) (*DeleteUserFromShoppingListResponse, error)
	mustEmbedUnimplementedShoppingListServiceServer()
}

// UnimplementedShoppingListServiceServer must be embedded to have forward compatible implementations.
type UnimplementedShoppingListServiceServer struct {
}

func (UnimplementedShoppingListServiceServer) GetShoppingLists(context.Context, *GetShoppingListsRequest) (*GetShoppingListsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetShoppingLists not implemented")
}
func (UnimplementedShoppingListServiceServer) CreateSharedShoppingList(context.Context, *CreateSharedShoppingListRequest) (*CreateSharedShoppingListResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateSharedShoppingList not implemented")
}
func (UnimplementedShoppingListServiceServer) GetShoppingList(context.Context, *GetShoppingListRequest) (*GetShoppingListResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetShoppingList not implemented")
}
func (UnimplementedShoppingListServiceServer) SetShoppingListName(context.Context, *SetShoppingListNameRequest) (*SetShoppingListNameResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SetShoppingListName not implemented")
}
func (UnimplementedShoppingListServiceServer) SetShoppingList(context.Context, *SetShoppingListRequest) (*SetShoppingListResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SetShoppingList not implemented")
}
func (UnimplementedShoppingListServiceServer) AddPurchasesToShoppingList(context.Context, *SetShoppingListRequest) (*SetShoppingListResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AddPurchasesToShoppingList not implemented")
}
func (UnimplementedShoppingListServiceServer) DeleteSharedShoppingList(context.Context, *DeleteSharedShoppingListRequest) (*DeleteSharedShoppingListResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteSharedShoppingList not implemented")
}
func (UnimplementedShoppingListServiceServer) GetShoppingListUsers(context.Context, *GetShoppingListUsersRequest) (*GetShoppingListUsersResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetShoppingListUsers not implemented")
}
func (UnimplementedShoppingListServiceServer) GetSharedShoppingListLink(context.Context, *GetSharedShoppingListLinkRequest) (*GetSharedShoppingListLinkResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetSharedShoppingListLink not implemented")
}
func (UnimplementedShoppingListServiceServer) JoinShoppingList(context.Context, *JoinShoppingListRequest) (*JoinShoppingListResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method JoinShoppingList not implemented")
}
func (UnimplementedShoppingListServiceServer) DeleteUserFromShoppingList(context.Context, *DeleteUserFromShoppingListRequest) (*DeleteUserFromShoppingListResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteUserFromShoppingList not implemented")
}
func (UnimplementedShoppingListServiceServer) mustEmbedUnimplementedShoppingListServiceServer() {}

// UnsafeShoppingListServiceServer may be embedded to opt out of forward compatibility for this service.
// Use of this interface is not recommended, as added methods to ShoppingListServiceServer will
// result in compilation errors.
type UnsafeShoppingListServiceServer interface {
	mustEmbedUnimplementedShoppingListServiceServer()
}

func RegisterShoppingListServiceServer(s grpc.ServiceRegistrar, srv ShoppingListServiceServer) {
	s.RegisterService(&ShoppingListService_ServiceDesc, srv)
}

func _ShoppingListService_GetShoppingLists_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetShoppingListsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ShoppingListServiceServer).GetShoppingLists(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: ShoppingListService_GetShoppingLists_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ShoppingListServiceServer).GetShoppingLists(ctx, req.(*GetShoppingListsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ShoppingListService_CreateSharedShoppingList_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateSharedShoppingListRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ShoppingListServiceServer).CreateSharedShoppingList(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: ShoppingListService_CreateSharedShoppingList_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ShoppingListServiceServer).CreateSharedShoppingList(ctx, req.(*CreateSharedShoppingListRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ShoppingListService_GetShoppingList_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetShoppingListRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ShoppingListServiceServer).GetShoppingList(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: ShoppingListService_GetShoppingList_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ShoppingListServiceServer).GetShoppingList(ctx, req.(*GetShoppingListRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ShoppingListService_SetShoppingListName_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SetShoppingListNameRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ShoppingListServiceServer).SetShoppingListName(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: ShoppingListService_SetShoppingListName_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ShoppingListServiceServer).SetShoppingListName(ctx, req.(*SetShoppingListNameRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ShoppingListService_SetShoppingList_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SetShoppingListRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ShoppingListServiceServer).SetShoppingList(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: ShoppingListService_SetShoppingList_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ShoppingListServiceServer).SetShoppingList(ctx, req.(*SetShoppingListRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ShoppingListService_AddPurchasesToShoppingList_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SetShoppingListRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ShoppingListServiceServer).AddPurchasesToShoppingList(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: ShoppingListService_AddPurchasesToShoppingList_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ShoppingListServiceServer).AddPurchasesToShoppingList(ctx, req.(*SetShoppingListRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ShoppingListService_DeleteSharedShoppingList_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteSharedShoppingListRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ShoppingListServiceServer).DeleteSharedShoppingList(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: ShoppingListService_DeleteSharedShoppingList_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ShoppingListServiceServer).DeleteSharedShoppingList(ctx, req.(*DeleteSharedShoppingListRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ShoppingListService_GetShoppingListUsers_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetShoppingListUsersRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ShoppingListServiceServer).GetShoppingListUsers(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: ShoppingListService_GetShoppingListUsers_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ShoppingListServiceServer).GetShoppingListUsers(ctx, req.(*GetShoppingListUsersRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ShoppingListService_GetSharedShoppingListLink_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetSharedShoppingListLinkRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ShoppingListServiceServer).GetSharedShoppingListLink(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: ShoppingListService_GetSharedShoppingListLink_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ShoppingListServiceServer).GetSharedShoppingListLink(ctx, req.(*GetSharedShoppingListLinkRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ShoppingListService_JoinShoppingList_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(JoinShoppingListRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ShoppingListServiceServer).JoinShoppingList(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: ShoppingListService_JoinShoppingList_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ShoppingListServiceServer).JoinShoppingList(ctx, req.(*JoinShoppingListRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ShoppingListService_DeleteUserFromShoppingList_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteUserFromShoppingListRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ShoppingListServiceServer).DeleteUserFromShoppingList(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: ShoppingListService_DeleteUserFromShoppingList_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ShoppingListServiceServer).DeleteUserFromShoppingList(ctx, req.(*DeleteUserFromShoppingListRequest))
	}
	return interceptor(ctx, in, info, handler)
}

// ShoppingListService_ServiceDesc is the grpc.ServiceDesc for ShoppingListService service.
// It's only intended for direct use with grpc.RegisterService,
// and not to be introspected or modified (even as a copy)
var ShoppingListService_ServiceDesc = grpc.ServiceDesc{
	ServiceName: "v1.ShoppingListService",
	HandlerType: (*ShoppingListServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetShoppingLists",
			Handler:    _ShoppingListService_GetShoppingLists_Handler,
		},
		{
			MethodName: "CreateSharedShoppingList",
			Handler:    _ShoppingListService_CreateSharedShoppingList_Handler,
		},
		{
			MethodName: "GetShoppingList",
			Handler:    _ShoppingListService_GetShoppingList_Handler,
		},
		{
			MethodName: "SetShoppingListName",
			Handler:    _ShoppingListService_SetShoppingListName_Handler,
		},
		{
			MethodName: "SetShoppingList",
			Handler:    _ShoppingListService_SetShoppingList_Handler,
		},
		{
			MethodName: "AddPurchasesToShoppingList",
			Handler:    _ShoppingListService_AddPurchasesToShoppingList_Handler,
		},
		{
			MethodName: "DeleteSharedShoppingList",
			Handler:    _ShoppingListService_DeleteSharedShoppingList_Handler,
		},
		{
			MethodName: "GetShoppingListUsers",
			Handler:    _ShoppingListService_GetShoppingListUsers_Handler,
		},
		{
			MethodName: "GetSharedShoppingListLink",
			Handler:    _ShoppingListService_GetSharedShoppingListLink_Handler,
		},
		{
			MethodName: "JoinShoppingList",
			Handler:    _ShoppingListService_JoinShoppingList_Handler,
		},
		{
			MethodName: "DeleteUserFromShoppingList",
			Handler:    _ShoppingListService_DeleteUserFromShoppingList_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "v1/service.proto",
}
